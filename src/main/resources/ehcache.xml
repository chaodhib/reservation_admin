<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by Celerio, a Jaxio product.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! Need commercial support ? Contact us: info@jaxio.com
 ! Template pack-backend-jpa:src/main/resources/ehcache.p.vm.xml
 ! Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
-->
<ehcache>
	<!-- see cache/ehcache-distributed.xml for hibernate distributed caching -->

	<!-- Sets the path to the directory where cache .data files are created.

		If the path is a Java System Property it is replaced by
		its value in the running VM.

		The following properties are translated:
		user.home - User's home directory
		user.dir - User's current working directory
		java.io.tmpdir - Default temp file path -->
	<diskStore path="java.io.tmpdir" />

	<!--Default Cache configuration. These will applied to caches programmatically created through
		the CacheManager.

		The following attributes are required for defaultCache:

		maxInMemory	   - Sets the maximum number of objects that will be created in memory
		eternal		   - Sets whether elements are eternal. If eternal,  timeouts are ignored and the element
		is never expired.
		timeToIdleSeconds - Sets the time to idle for an element before it expires.
		i.e. The maximum amount of time between accesses before an element expires
		Is only used if the element is not eternal.
		Optional attribute. A value of 0 means that an Element can idle for infinity
		timeToLiveSeconds - Sets the time to live for an element before it expires.
		i.e. The maximum time between creation time and when an element expires.
		Is only used if the element is not eternal.
		Optional attribute. A value of 0 means that and Element can live for infinity
		overflowToDisk	- Sets whether elements can overflow to disk when the in-memory cache
		has reached the maxInMemory limit.

	-->
	<defaultCache maxElementsInMemory="2000" eternal="false"
		timeToIdleSeconds="6000" timeToLiveSeconds="6000"
		overflowToDisk="false" memoryStoreEvictionPolicy="LFU">
	</defaultCache>

	<cache name="org.hibernate.cache.internal.StandardQueryCache"
		maxElementsInMemory="10000" eternal="false" timeToIdleSeconds="86400"
		timeToLiveSeconds="86400" overflowToDisk="false"
		memoryStoreEvictionPolicy="LFU">
	</cache>

	<cache name="org.hibernate.cache.spi.UpdateTimestampsCache"
		maxElementsInMemory="400000" eternal="true" overflowToDisk="false"
		memoryStoreEvictionPolicy="LFU">
	</cache>

	<!--

		You can override cache configuration given a cache name the following way:

		The following cache may be used

		# hibernate related
		org.hibernate.cache.internal.StandardQueryCache
		org.hibernate.cache.spi.UpdateTimestampsCache

		# database related
		com.chaouki.icc.reservations.domain.Artists
		com.chaouki.icc.reservations.domain.Artists.types

		com.chaouki.icc.reservations.domain.Localities

		com.chaouki.icc.reservations.domain.Locations

		com.chaouki.icc.reservations.domain.RepresentationUser

		com.chaouki.icc.reservations.domain.Representations

		com.chaouki.icc.reservations.domain.Roles

		com.chaouki.icc.reservations.domain.Shows

		com.chaouki.icc.reservations.domain.Types

		com.chaouki.icc.reservations.domain.Users

	-->
</ehcache>
