<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by Celerio, a Jaxio product.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! Need commercial support ? Contact us: info@jaxio.com
 ! Template pack-backend-jpa:src/main/resources/META-INF/spring-orm.p.vm.xml
 ! Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
-->
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
                 version="2.1">
	<description><![CDATA[
		NOTE: You may override the JPA annotations of your Java entities in this file.
		This is also the standard place to declare your named queries.

		********************************************
		* ABOUT NAMED QUERIES and SearchParameters *
		********************************************

		Named query integration is almost transparent, it is done using
		the generated services and searchParameters.

		To execute a named query
		========================
		* Define a named query in this file (some example are provided) or via an annotation in your Entity class.

		* Pass the named query's name and the parameters, if any, to the searchParameters:
			searchParameters.setNamedQuery("myNamedQuery");
			searchParameters.addParameter("paramName", paramValue);

		* Use the xxxRepository that handles the Xxx entity that the named query should return.
			 For example:
				xxxRepository.find(searchParameters) or
				xxxRepository.find(xxxModel, searchParameters)

				xxxRepository.findCount(searchParameters)
				xxxRepository.findCount(xxxModel, searchParameters)

		* When you define your named query the parameters will be replaced with either
			- the value of xxxModel.get<parameterName>()
			- the value returned by searchParameters.getParameters().get("<parameterName>")

		Dynamic order By support:
		=========================
		If the hint 'dynamic' is present and set to 'true'
		the query will be dynamically modified to take into account the orderBy
		information carried by the searchParameters.
		This is extremely usefuf when rendering sortable data to the view.
		NOTE: When dynamic is true YOU MUST declare a 'query' hint having exactly the same value as the query tag.

		Dynamic Select count support:
		=============================
		Note that if you call xxxRepository.findCount(searchParameters) and that your
		named query starts with "from" instead of "select", the "select count(*) "
		will be dynamically appended so it returns what you expect.
	]]></description>
</entity-mappings>