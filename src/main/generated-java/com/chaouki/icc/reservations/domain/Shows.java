/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-jpa:src/main/java/domain/Entity.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
 */
package com.chaouki.icc.reservations.domain;

import static javax.persistence.CascadeType.MERGE;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.URL;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import com.jaxio.jpa.querybyexample.Identifiable;

@Entity
@Table(name = "shows")
public class Shows implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(Shows.class);

    // Raw attributes
    private Integer id;
    private String slug;
    private String title;
    private String posterUrl;
    private Boolean bookable;
    private Double price;

    // Many to one
    private Locations location;
    // -- [id] ------------------------

    @Override
    @Column(name = "id", precision = 10)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Shows id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [slug] ------------------------

    @NotEmpty
    @Size(max = 60)
    @Column(name = "slug", nullable = false, unique = true, length = 60)
    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public Shows slug(String slug) {
        setSlug(slug);
        return this;
    }
    // -- [title] ------------------------

    @NotEmpty
    @Size(max = 255)
    @Column(name = "title", nullable = false)
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Shows title(String title) {
        setTitle(title);
        return this;
    }
    // -- [posterUrl] ------------------------

    @NotEmpty
    @Size(max = 255)
    @URL
    @Column(name = "poster_url", nullable = false)
    public String getPosterUrl() {
        return posterUrl;
    }

    public void setPosterUrl(String posterUrl) {
        this.posterUrl = posterUrl;
    }

    public Shows posterUrl(String posterUrl) {
        setPosterUrl(posterUrl);
        return this;
    }
    // -- [bookable] ------------------------

    /**
     * RÃ©servable?
     */
    @NotNull
    @Column(name = "bookable", nullable = false, length = 1)
    public Boolean getBookable() {
        return bookable;
    }

    public void setBookable(Boolean bookable) {
        this.bookable = bookable;
    }

    public Shows bookable(Boolean bookable) {
        setBookable(bookable);
        return this;
    }
    // -- [price] ------------------------

    @Digits(integer = 8, fraction = 2)
    @NotNull
    @Column(name = "price", nullable = false, precision = 10, scale = 2)
    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    public Shows price(Double price) {
        setPrice(price);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Shows.location ==> Locations.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "location_id", nullable = false)
    @ManyToOne(fetch = LAZY)
    public Locations getLocation() {
        return location;
    }

    /**
     * Set the {@link #location} without adding this Shows instance on the passed {@link #location}
     */
    public void setLocation(Locations location) {
        this.location = location;
    }

    public Shows location(Locations location) {
        setLocation(location);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Shows withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Shows && hashCode() == other.hashCode());
    }

    private volatile int previousHashCode = 0;

    @Override
    public int hashCode() {
        int hashCode = Objects.hashCode(getSlug());

        if (previousHashCode != 0 && previousHashCode != hashCode) {
            log.warn("DEVELOPER: hashCode has changed!." //
                    + "If you encounter this message you should take the time to carefully review equals/hashCode for: " //
                    + getClass().getCanonicalName());
        }

        previousHashCode = hashCode;
        return hashCode;
    }

    /**
     * Construct a readable string representation for this Shows instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("slug", getSlug()) //
                .add("title", getTitle()) //
                .add("posterUrl", getPosterUrl()) //
                .add("bookable", getBookable()) //
                .add("price", getPrice()) //
                .toString();
    }
}