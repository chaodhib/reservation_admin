/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/ExcelExporter.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package com.chaouki.icc.reservations.web.domain;

import javax.inject.Inject;
import javax.inject.Named;

import com.chaouki.icc.reservations.domain.Users;
import com.chaouki.icc.reservations.web.domain.support.GenericExcelExporter;
import com.chaouki.icc.reservations.web.faces.ConversationContextScoped;

/**
 * Exports to excel document {@link Users} search criteria and result. 
 */
@Named
@ConversationContextScoped
public class UsersExcelExporter extends GenericExcelExporter<Users> {
    @Inject
    protected UsersSearchForm sf;

    public UsersExcelExporter() {
        super("users_login", "users_password", "users_firstname", "users_lastname", "users_email", "users_langue");
    }

    @Override
    protected void fillResultItem(int row, Users item) {
        int col = 0;
        setValue(row, col++, item.getLogin());
        setValue(row, col++, item.getPassword());
        setValue(row, col++, item.getFirstname());
        setValue(row, col++, item.getLastname());
        setValue(row, col++, item.getEmail());
        setValue(row, col++, item.getLangue());
    }

    @Override
    public void fillSearchCriteria(int row) {
        useCriteriaSheet();

        setSelector(row++, 0, "users_login", sf.getLoginSelector());
        setSelector(row++, 0, "users_password", sf.getPasswordSelector());
        setSelectedEntities(row++, 0, "users_role", sf.getRoleSelector().getSelected());
        setSelector(row++, 0, "users_firstname", sf.getFirstnameSelector());
        setSelector(row++, 0, "users_lastname", sf.getLastnameSelector());
        setSelector(row++, 0, "users_email", sf.getEmailSelector());
        setSelector(row++, 0, "users_langue", sf.getLangueSelector());
    }
}