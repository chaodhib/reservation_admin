/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package com.chaouki.icc.reservations.web.domain;

import static com.jaxio.jpa.querybyexample.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.chaouki.icc.reservations.domain.Locality;
import com.chaouki.icc.reservations.domain.Locality_;
import com.chaouki.icc.reservations.web.domain.support.GenericSearchForm;
import com.chaouki.icc.reservations.web.faces.ConversationContextScoped;
import com.jaxio.jpa.querybyexample.PropertySelector;
import com.jaxio.jpa.querybyexample.SearchParameters;

/**
 * View Helper to search {@link Locality}.
 * It exposes a {@link Locality} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class LocalitySearchForm extends GenericSearchForm<Locality, Integer, LocalitySearchForm> {
    private static final long serialVersionUID = 1L;
    protected Locality locality = new Locality();
    protected PropertySelector<Locality, String> postalCodeSelector = newPropertySelector(Locality_.postalCode);
    protected PropertySelector<Locality, String> locality2Selector = newPropertySelector(Locality_.locality2);

    public Locality getLocality() {
        return locality;
    }

    @Override
    protected Locality getEntity() {
        return getLocality();
    }

    @Override
    public LocalitySearchForm newInstance() {
        return new LocalitySearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.property(postalCodeSelector, locality2Selector);
        return sp;
    }

    @Override
    public void resetWithOther(LocalitySearchForm other) {
        this.locality = other.getLocality();
        this.postalCodeSelector = other.getPostalCodeSelector();
        this.locality2Selector = other.getLocality2Selector();
    }

    // Property selectors
    public PropertySelector<Locality, String> getPostalCodeSelector() {
        return postalCodeSelector;
    }

    public PropertySelector<Locality, String> getLocality2Selector() {
        return locality2Selector;
    }
}
