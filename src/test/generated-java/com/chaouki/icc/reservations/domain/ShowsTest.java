/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
 */
package com.chaouki.icc.reservations.domain;

import static org.fest.assertions.Assertions.assertThat;

import java.io.*;
import java.util.*;

import org.junit.Test;

import com.chaouki.icc.reservations.util.ValueGenerator;

/**
 * Basic tests for Shows
 */
@SuppressWarnings("unused")
public class ShowsTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        Shows model = new Shows();
        assertThat(model.isIdSet()).isFalse();
    }

    @Test
    public void isIdSetReturnsTrue() {
        Shows model = new Shows();
        model.setId(ValueGenerator.getUniqueInteger());
        assertThat(model.getId()).isNotNull();
        assertThat(model.isIdSet()).isTrue();
    }

    //-------------------------------------------------------------
    // Many to One:  Shows.category ==> Category.id
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setCategory() {
        Shows many = new Shows();

        // init
        Category one = new Category();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setCategory(one);

        // make sure it is propagated properly
        assertThat(many.getCategory()).isEqualTo(one);

        // now set it to back to null
        many.setCategory(null);

        // make sure null is propagated properly
        assertThat(many.getCategory()).isNull();
    }

    @Test
    public void manyToOne_setLocation() {
        Shows many = new Shows();

        // init
        Locations one = new Locations();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setLocation(one);

        // make sure it is propagated properly
        assertThat(many.getLocation()).isEqualTo(one);

        // now set it to back to null
        many.setLocation(null);

        // make sure null is propagated properly
        assertThat(many.getLocation()).isNull();
    }

    @Test
    public void equalsUsingBusinessKey() {
        Shows model1 = new Shows();
        Shows model2 = new Shows();
        String slug = ValueGenerator.getUniqueString(60);
        model1.setSlug(slug);
        model2.setSlug(slug);
        assertThat(model1).isEqualTo(model2);
        assertThat(model2).isEqualTo(model1);
        assertThat(model1.hashCode()).isEqualTo(model2.hashCode());
    }
}